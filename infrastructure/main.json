{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "my-demo-rg"
    },
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "Specifies the Azure location/region where aks will be created"
      }
    }
  },
  "functions": [],
  "variables": {
    "tags": {
      "environment": "production",
      "projectCode": "xyz"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vn",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "tags": {
              "type": "object"
            }
          },
          "functions": [],
          "variables": {
            "addressPrefix": "20.0.0.0/16",
            "subnetName": "Subnet01",
            "subnetPrefix": "20.0.0.0/24",
            "virtualNetworkName": "MyVNET01"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-06-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('subnetPrefix')]",
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.KeyVault"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "subnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName')), variables('subnetName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "identity",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "aks-identity",
              "location": "[resourceGroup().location]"
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "keyvault-identity",
              "location": "[resourceGroup().location]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ManagedIdentity/userAssignedIdentities/{0}', 'keyvault-identity')]",
              "name": "[guid('Key Vault Secret User', 'aks')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aks-identity')).principalId]",
                "roleDefinitionId": "f1a07417-d97a-45cb-824c-7a7467783830"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aks-identity')]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'keyvault-identity')]"
              ]
            }
          ],
          "outputs": {
            "aksIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aks-identity')]"
            },
            "kvIdentityResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'keyvault-identity')]"
            },
            "kvIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'keyvault-identity')).clientId]"
            },
            "kvIdentityObjectId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'keyvault-identity')).principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "kv",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vn'), '2019-10-01').outputs.subnetId.value]"
          },
          "kvIdentityObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity'), '2019-10-01').outputs.kvIdentityObjectId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "subnetId": {
              "type": "string"
            },
            "kvIdentityObjectId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "keyvault-aks-1",
              "location": "[resourceGroup().location]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": [
                  {
                    "tenantId": "[subscription().tenantId]",
                    "objectId": "[parameters('kvIdentityObjectId')]",
                    "permissions": {
                      "secrets": [
                        "get"
                      ]
                    }
                  }
                ],
                "networkAcls": {
                  "virtualNetworkRules": [
                    {
                      "id": "[parameters('subnetId')]"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vn')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "aks",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('tags')]"
          },
          "subnetId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vn'), '2019-10-01').outputs.subnetId.value]"
          },
          "kvUAMIResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity'), '2019-10-01').outputs.kvIdentityResourceId.value]"
          },
          "kvUAMIClientId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity'), '2019-10-01').outputs.kvIdentityClientId.value]"
          },
          "kvUAMIObjectId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity'), '2019-10-01').outputs.kvIdentityObjectId.value]"
          },
          "aksUAMIResourceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity'), '2019-10-01').outputs.aksIdentityResourceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "dnsPrefix": {
              "type": "string",
              "defaultValue": "cl01",
              "metadata": {
                "description": "The DNS prefix to use with hosted Kubernetes API server FQDN."
              }
            },
            "clusterName": {
              "type": "string",
              "defaultValue": "aks101",
              "metadata": {
                "description": "The name of the Managed Cluster resource."
              }
            },
            "agentCount": {
              "type": "int",
              "defaultValue": 1,
              "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
              },
              "maxValue": 50,
              "minValue": 1
            },
            "agentVMSize": {
              "type": "string",
              "defaultValue": "Standard_DS3_v2",
              "metadata": {
                "description": "The size of the Virtual Machine."
              }
            },
            "tags": {
              "type": "object"
            },
            "subnetId": {
              "type": "string"
            },
            "kvUAMIResourceId": {
              "type": "string"
            },
            "kvUAMIClientId": {
              "type": "string"
            },
            "kvUAMIObjectId": {
              "type": "string"
            },
            "aksUAMIResourceId": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "kubernetesVersion": "1.20.2",
            "nodeResourceGroup": "[format('rg-{0}-{1}', parameters('dnsPrefix'), parameters('clusterName'))]",
            "agentPoolName": "agentpool01"
          },
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2021-02-01",
              "name": "[parameters('clusterName')]",
              "location": "[resourceGroup().location]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[parameters('aksUAMIResourceId')]": {}
                }
              },
              "properties": {
                "kubernetesVersion": "[variables('kubernetesVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                  {
                    "name": "[variables('agentPoolName')]",
                    "count": "[parameters('agentCount')]",
                    "minCount": 1,
                    "maxCount": 5,
                    "maxPods": 100,
                    "mode": "System",
                    "vmSize": "[parameters('agentVMSize')]",
                    "type": "VirtualMachineScaleSets",
                    "osType": "Linux",
                    "osDiskType": "Ephemeral",
                    "enableAutoScaling": true,
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ],
                    "vnetSubnetID": "[parameters('subnetId')]"
                  }
                ],
                "servicePrincipalProfile": {
                  "clientId": "msi"
                },
                "podIdentityProfile": {
                  "enabled": true,
                  "userAssignedIdentities": [
                    {
                      "name": "kv-identity",
                      "namespace": "default",
                      "identity": {
                        "resourceId": "[parameters('kvUAMIResourceId')]",
                        "clientId": "[parameters('kvUAMIClientId')]",
                        "objectId": "[parameters('kvUAMIObjectId')]"
                      }
                    }
                  ]
                },
                "nodeResourceGroup": "[variables('nodeResourceGroup')]",
                "networkProfile": {
                  "networkPlugin": "azure",
                  "loadBalancerSku": "standard",
                  "networkPolicy": "calico"
                }
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
            },
            "apiServerAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))).fqdn]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'identity')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'vn')]"
      ]
    }
  ],
  "outputs": {
    "id": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'aks'), '2019-10-01').outputs.id.value]"
    },
    "apiServerAddress": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', 'aks'), '2019-10-01').outputs.apiServerAddress.value]"
    }
  },
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "8847271258290177964"
    }
  }
}